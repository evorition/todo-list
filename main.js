(()=>{"use strict";const t={};function e(e,n){t[e]||(t[e]=[]),t[e].push(n)}function n(e,n){t[e]&&t[e].forEach((t=>{t(n)}))}class s{constructor(t,e,n,s){this.title=t,this.description=e,this.dueDate=n,this.priority=s}}class i{constructor(t){this.name=t,this.tasks=[]}addTask(t,e,n,i){const a=new s(t,e,n,i);this.tasks.push(a)}removeTask(t){t>=0&&t<this.tasks.length&&this.tasks.splice(t,1)}updateTask(t,e,n,s,i){const a=this.tasks[t];a.title=e,a.description=n,a.dueDate=s,a.priority=i}}const a=localStorage.getItem("projects")?JSON.parse(localStorage.getItem("projects")):[];let o=null;function d(t){o=a[t],n("render-project-tasks",o.tasks),n("highlight-selected-project",t)}const c=document.getElementById("open-project-form"),l=document.getElementById("close-project-form"),r=document.getElementById("project-form-container"),m=document.getElementById("project-name");function u(){c.style.display="block",r.style.display="none",r.firstElementChild.reset(),m.setCustomValidity("")}const p=document.getElementById("open-task-form"),y=document.getElementById("close-task-form"),k=document.getElementById("task-form-container"),E=document.getElementById("task-form-title"),f=document.getElementById("submit-task-button"),g=document.getElementById("title"),h=document.getElementById("description"),v=document.getElementById("due-date"),I=document.getElementById("priority"),b=document.getElementById("bg");function j(t=null){if(null!==t){const e=function(t){return o.tasks[t]}(t);g.value=e.title,h.value=e.description,v.value=e.dueDate,I.value=e.priority,f.textContent="Edit",f.setAttribute("data-task-index",t),E.textContent="Edit task"}else f.textContent="Submit";b.style.display="block",k.style.display="block"}function C(){k.lastElementChild.reset(),f.textContent="Submit",f.removeAttribute("data-task-index"),E.textContent="Add new title",g.setCustomValidity(""),b.style.display="none",k.style.display="none"}function L(){document.querySelectorAll(".project-item").forEach(((t,e)=>{t.addEventListener("click",(t=>{t.target.classList.contains("delete-project")?function(t){-1!==a.findIndex(((e,n)=>n===t))&&n("clear-project-tasks"),a.splice(t,1),localStorage.setItem("projects",JSON.stringify(a)),n("render-projects",a)}(e):d(e)}))}))}const B=document.getElementById("projects-list"),x=document.getElementById("tasks-list"),S=document.getElementById("open-task-form");function V(){B.childNodes.forEach((t=>{t.classList.remove("selected")})),x.innerHTML="",S.style.display="none"}const w=document.getElementById("task-details"),T=document.getElementById("close-task-details"),N=document.getElementById("bg");T.addEventListener("click",(function(){N.style.display="none",w.style.display="none"})),e("highlight-selected-project",(t=>{!function(t){B.childNodes[t].classList.add("selected")}(t)})),e("render-projects",(t=>{!function(t){B.innerHTML="",t.forEach((t=>{const e=document.createElement("li"),n=document.createElement("span"),s=document.createElement("span");e.classList.add("project-item"),n.classList.add("project-name"),n.textContent=t.name,s.classList.add("material-symbols-rounded","delete-project"),s.textContent="delete",e.appendChild(n),e.appendChild(s),B.appendChild(e)})),L()}(t)})),e("clear-project-tasks",(()=>{V()})),e("render-project-tasks",(t=>{!function(t){V(),S.style.display="flex",t.forEach((t=>{const e=document.createElement("li"),n=document.createElement("input"),s=document.createElement("span"),i=document.createElement("span"),a=document.createElement("span"),o=document.createElement("span");switch(t.priority){case"low":e.classList.add("low-priority");break;case"medium":e.classList.add("medium-priority");break;case"high":e.classList.add("high-priority")}e.classList.add("task-item"),n.classList.add("complete-task"),n.setAttribute("type","checkbox"),s.classList.add("task-details"),o.classList.add("material-symbols-rounded","edit-task"),o.textContent="edit_note",i.textContent=t.title,a.textContent=t.dueDate,e.appendChild(n),s.appendChild(i),s.appendChild(a),e.appendChild(s),e.appendChild(o),x.appendChild(e)})),document.querySelectorAll(".task-item").forEach(((t,e)=>{t.addEventListener("click",(t=>{t.target.classList.contains("complete-task")?function(t){o.removeTask(t),localStorage.setItem("projects",JSON.stringify(a)),n("render-project-tasks",o.tasks)}(e):t.target.classList.contains("edit-task")?n("open-task-form",e):function(t){n("render-task-details",o.tasks[t])}(e)}))}))}(t)})),e("render-task-details",(t=>{!function(t){N.style.display="block",w.style.display="block";const e=document.getElementById("task-title"),n=document.getElementById("task-description"),s=document.getElementById("task-due-date"),i=document.getElementById("task-priority");e.textContent=t.title,n.textContent=t.description,s.textContent=t.dueDate,i.textContent=t.priority}(t)})),e("open-task-form",(t=>{j(t)})),c.addEventListener("click",(function(){c.style.display="none",r.style.display="block"})),l.addEventListener("click",u),r.addEventListener("submit",(function(t){if(t.preventDefault(),!m.checkValidity())return;const e=m.value.trim();u(),function(t){if(-1!==a.findIndex((e=>e.name===t)))return;const e=new i(t);a.push(e),localStorage.setItem("projects",JSON.stringify(a)),n("render-projects",a),d(a.length-1)}(e)})),m.addEventListener("keyup",(function(){m.value.trim().length?(m.setCustomValidity(""),m.dispatchEvent(new Event("input",{bubbles:!0}))):(m.setCustomValidity("Project name can't be empty."),m.reportValidity())})),p.addEventListener("click",(()=>{j()})),y.addEventListener("click",C),k.addEventListener("submit",(function(t){if(t.preventDefault(),!g.checkValidity())return;const e=f.getAttribute("data-task-index"),s=g.value.trim(),i=h.value.trim(),d=v.value,c=I.value;var l,r,m,u;e?(C(),function(t,e,s,i,d){o.updateTask(t,e,s,i,d),localStorage.setItem("projects",JSON.stringify(a)),n("render-project-tasks",o.tasks)}(e,s,i,d,c)):(C(),l=s,r=i,m=d,u=c,o.addTask(l,r,m,u),localStorage.setItem("projects",JSON.stringify(a)),n("render-project-tasks",o.tasks))})),g.addEventListener("keyup",(function(){g.value.trim().length?(g.setCustomValidity(""),g.dispatchEvent(new Event("input",{bubbles:!0}))):(g.setCustomValidity("Task name can't be empty."),g.reportValidity())})),a.length&&(a.forEach(((t,e)=>{const n=new i;a[e]=Object.assign(n,t)})),n("render-projects",a))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,